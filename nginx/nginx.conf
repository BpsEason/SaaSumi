events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # Backend (Laravel) - API Proxy
    upstream backend_app {
        server backend:80;
    }

    # AI Recommendation (FastAPI) - API Proxy
    upstream fastapi_recommend {
        server fastapi-recommend:8001;
    }

    # Main Frontend Server
    server {
        listen 8080;
        server_name localhost;

        # Serve static frontend files
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
        }

        # Proxy API requests to Laravel backend (including login and general APIs)
        # This location block should be broad enough to catch API calls.
        # It needs to handle dynamic tenant subdomains like tenant-name.localhost
        # Ensure that Nginx passes the Host header correctly.
        location ~ ^/(api|line-notify)/ {
            # Use $http_host to dynamically pass the original host (e.g., tokyo-inn.localhost)
            # This is important for Laravel Tenancy if it relies on the Host header for central domains.
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://backend_app/$request_uri;
        }

        # Proxy AI Recommendation API requests
        location /api/recommend {
            proxy_pass http://fastapi_recommend/api/recommend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Tenant-specific server blocks (for dynamic tenant domains)
    # This example assumes you will configure specific domains.
    # For a wildcard setup, you might need more advanced Nginx or DNS.
    # Example for a specific tenant:
    server {
        listen 8000; # Laravel's default port, assuming this is where tenant apps listen
        server_name ~^(?<tenant_domain>.+)\.localhost$; # Regex to capture tenant domain

        set $tenant_app_root /var/www/html/public; # Laravel public directory
        root $tenant_app_root;
        index index.php index.html;

        # Ensure Laravel's public directory is used
        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        # Pass PHP requests to PHP-FPM (assuming backend is Apache+PHP-FPM, or similar)
        # For Apache as used in Dockerfile, this isn't strictly needed for .php files
        # served via DocumentRoot, but illustrative for PHP-FPM setups.
        location ~ \.php$ {
            # For Apache as used in Dockerfile:
            # This block might not be strictly needed if Apache is the primary server and handles .php
            # However, if you switch to PHP-FPM, this is crucial.
            # proxy_pass http://backend_app; # Example if backend serves PHP directly
            # include fastcgi_params;
            # fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            # fastcgi_pass unix:/var/run/php/php8.3-fpm.sock; # Example for PHP-FPM socket
        }

        # Pass all API requests to the backend service.
        # The 'X-Tenant-Domain' header is crucial for Laravel Tenancy to identify the tenant.
        location /api/ {
            proxy_set_header Host $host; # Pass the actual tenant domain (e.g., tokyo-inn.localhost)
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Tenant-Domain $tenant_domain.localhost; # Explicitly set for Laravel Tenancy
            proxy_pass http://backend_app/api/;
        }
        
        # Line Notify Redirect route must also hit the backend with the correct tenant context
        location /line-notify/redirect {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Tenant-Domain $tenant_domain.localhost;
            proxy_pass http://backend_app/line-notify/redirect;
        }
    }
}
